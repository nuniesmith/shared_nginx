# config/nginx/conf.d/health-check.conf
# Standardized health check endpoint for all services
# Include this in any service that needs a health endpoint

location = /health {
    access_log off;
    include /etc/nginx/conf.d/cors-universal.conf;
    
    # Set content type
    add_header Content-Type "application/json; charset=utf-8" always;
    
    # Return health status - override $service_name and $service_type in each server block
    return 200 '{"service": "$service_name", "status": "healthy", "type": "$service_type", "timestamp": "$time_iso8601"}';
}

# Health check with upstream validation
location = /health/upstream {
    access_log off;
    include /etc/nginx/conf.d/cors-universal.conf;
    
    # Test upstream connectivity
    proxy_pass $upstream_url/health;
    proxy_method HEAD;
    proxy_pass_request_body off;
    proxy_set_header Content-Length "";
    proxy_connect_timeout 3s;
    proxy_send_timeout 3s;
    proxy_read_timeout 3s;
    
    # Handle upstream responses
    error_page 200 = @health_upstream_ok;
    error_page 400 401 403 404 500 502 503 504 = @health_upstream_error;
}

location @health_upstream_ok {
    add_header Content-Type "application/json; charset=utf-8" always;
    include /etc/nginx/conf.d/cors-universal.conf;
    return 200 '{"service": "$service_name", "status": "healthy", "upstream": "connected", "timestamp": "$time_iso8601"}';
}

location @health_upstream_error {
    add_header Content-Type "application/json; charset=utf-8" always;
    include /etc/nginx/conf.d/cors-universal.conf;
    return 503 '{"service": "$service_name", "status": "unhealthy", "upstream": "disconnected", "timestamp": "$time_iso8601"}';
}