# config/nginx/conf.d/default.conf
# Main server configuration with SSL support

# ============================================================================
# HTTP TO HTTPS REDIRECT SERVER
# ============================================================================
server {
    listen 80 default_server;
    server_name _;
    
    # Health check endpoint (always available via HTTP)
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Let's Encrypt ACME challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri =404;
    }
    
    # Redirect all other HTTP traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# ============================================================================
# MAIN HTTPS SERVER (dashboard only)
# ============================================================================
server {
    listen 443 ssl;
    http2 on;
    server_name nginx.7gram.xyz;
    
    # Include SSL configuration (includes resolver)
    include /etc/nginx/conf.d/ssl.conf;
    
    # Do not include global service proxies here; per-subdomain servers handle routing
    # include /etc/nginx/conf.d/services.inc;
    
    # Root directory
    root /usr/share/nginx/html;
    index index.html index.htm;
    
    # ========================================================================
    # LOGGING CONFIGURATION
    # ========================================================================
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # ========================================================================
    # SECURITY CONFIGURATION
    # ========================================================================
    
    # Hide nginx version
    server_tokens off;
    
    # Prevent access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # ========================================================================
    # SPECIAL ENDPOINTS
    # ========================================================================
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # SSL certificate information endpoint
    location /ssl-info {
        access_log off;
        return 200 "SSL certificate active\n";
        add_header Content-Type text/plain;
        add_header X-SSL-Subject "$ssl_client_s_dn";
        add_header X-SSL-Issuer "$ssl_client_i_dn";
    }
    
    # Nginx status (restricted access)
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow ::1;
        # Add your Tailscale network here
        allow 100.64.0.0/10;
        deny all;
    }
    
    # ========================================================================
    # WEB INTERFACE AND SERVER ROUTING
    # ========================================================================
    
    # React Web Interface for Server Routing
    location /router/ {
        # Remove /router prefix when forwarding to React app
        rewrite ^/router/(.*) /$1 break;
        
        # Proxy to React web interface (use variable to delay DNS resolution)
        set $web_interface web-interface:3000;
        proxy_pass http://$web_interface;
        
        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # WebSocket support for React dev server
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # Server routing API endpoints
    location /api/servers/ {
        # Proxy to web interface for server status API (use variable to delay DNS resolution)
        set $web_interface web-interface:3000;
        proxy_pass http://$web_interface/api/servers/;
        
        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # API-specific headers
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization";
    }
    
    # Sullivan Server Proxy
    location /sullivan/ {
        # Forward to Sullivan server (use variable to delay DNS resolution)
        set $sullivan_server https://sullivan.7gram.xyz;
        proxy_pass $sullivan_server/;
        
        # Standard proxy headers
        proxy_set_header Host sullivan.7gram.xyz;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Original-Host $host;
        
        # Handle redirects
        proxy_redirect https://sullivan.7gram.xyz/ /sullivan/;
        
        # SSL verification
        proxy_ssl_verify off;
        proxy_ssl_server_name on;
        
        # Timeouts for external server
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # Freddy Server Proxy
    location /freddy/ {
        # Forward to Freddy server (use variable to delay DNS resolution)
        set $freddy_server https://freddy.7gram.xyz;
        proxy_pass $freddy_server/;
        
        # Standard proxy headers
        proxy_set_header Host freddy.7gram.xyz;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Original-Host $host;
        
        # Handle redirects
        proxy_redirect https://freddy.7gram.xyz/ /freddy/;
        
        # SSL verification
        proxy_ssl_verify off;
        proxy_ssl_server_name on;
        
        # Timeouts for external server
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # ========================================================================
    # PROXY CONFIGURATION FOR BACKEND SERVICES
    # ========================================================================
    
    # FKS API Proxy (commented out - service not available)
    # location /api/ {
    #     # Remove /api prefix when forwarding
    #     rewrite ^/api/(.*) /$1 break;
    #     
    #     # Proxy to FKS API server
    #     proxy_pass http://fks_api:8000;
    #     
    #     # Standard proxy headers
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_set_header X-Forwarded-Host $host;
    #     proxy_set_header X-Forwarded-Port $server_port;
    #     
    #     # WebSocket support
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "upgrade";
    #     
    #     # Timeouts
    #     proxy_connect_timeout 30s;
    #     proxy_send_timeout 30s;
    #     proxy_read_timeout 30s;
    #     
    #     # Buffering
    #     proxy_buffering on;
    #     proxy_buffer_size 128k;
    #     proxy_buffers 4 256k;
    #     proxy_busy_buffers_size 256k;
    # }
    
    # FKS Web Application (commented out - service not available)
    # location /app/ {
    #     # Remove /app prefix when forwarding
    #     rewrite ^/app/(.*) /$1 break;
    #     
    #     # Proxy to FKS web server
    #     proxy_pass http://fks_web:3000;
    #     
    #     # Standard proxy headers
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     
    #     # Handle static assets
    #     location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
    #         expires 1y;
    #         add_header Cache-Control "public, immutable";
    #         add_header X-Content-Type-Options nosniff;
    #     }
    # }
    
    # ATS Game Server Management (commented out - service not available)
    # location /ats/ {
    #     # Proxy to ATS management interface (if available)
    #     proxy_pass http://ats-server:8080;
    #     
    #     # Standard proxy headers
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     
    #     # Basic auth for ATS management
    #     auth_basic "ATS Server Management";
    #     auth_basic_user_file /etc/nginx/conf.d/.htpasswd;
    # }
    
    # ========================================================================
    # STATIC CONTENT HANDLING
    # ========================================================================
    
    # Main site content
    location / {
        try_files $uri $uri/ =404;
        
        # Security headers for static content
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        
        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;
            
            # Compress static files
            gzip_static on;
        }
        
        # Cache HTML files for shorter period
        location ~* \.(html|htm)$ {
            expires 1h;
            add_header Cache-Control "public, must-revalidate";
        }
    }
    
    # ========================================================================
    # ERROR PAGES
    # ========================================================================
    
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}

# ============================================================================
# FALLBACK SERVER (CATCH-ALL)
# ============================================================================
server {
    listen 443 ssl default_server;
    http2 on;
    server_name _;
    
    # Include SSL configuration
    include /etc/nginx/conf.d/ssl.conf;
    
    # Return 444 (connection closed) for unknown hosts
    return 444;
}
