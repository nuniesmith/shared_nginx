# config/nginx/conf.d/maps.conf
# Simplified utility maps for nginx configuration

# ============================================================================
# CONNECTION AND PROTOCOL HANDLING
# ============================================================================

# WebSocket upgrade handling
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

# ============================================================================
# CACHE CONTROL AND EXPIRATION
# ============================================================================

# Cache control based on content type - Optimized for dashboard
map $sent_http_content_type $cache_control_header {
    # HTML pages - short cache for dashboard updates
    "text/html"                          "public, max-age=300, must-revalidate";
    "text/html; charset=utf-8"           "public, max-age=300, must-revalidate";
    
    # JSON responses - very short cache for config updates
    "application/json"                   "public, max-age=60, must-revalidate";
    "application/json; charset=utf-8"    "public, max-age=60, must-revalidate";
    
    # Static assets - long cache with immutable flag
    "text/css"                           "public, max-age=31536000, immutable";
    "application/javascript"             "public, max-age=31536000, immutable";
    "application/x-javascript"           "public, max-age=31536000, immutable";
    
    # Images - long cache
    "image/jpeg"                         "public, max-age=31536000";
    "image/jpg"                          "public, max-age=31536000";
    "image/png"                          "public, max-age=31536000";
    "image/gif"                          "public, max-age=31536000";
    "image/webp"                         "public, max-age=31536000";
    "image/svg+xml"                      "public, max-age=31536000";
    "image/x-icon"                       "public, max-age=31536000";
    
    # Fonts - very long cache
    "font/woff"                          "public, max-age=31536000, immutable";
    "font/woff2"                         "public, max-age=31536000, immutable";
    "font/ttf"                           "public, max-age=31536000, immutable";
    "font/otf"                           "public, max-age=31536000, immutable";
    "application/font-woff"              "public, max-age=31536000, immutable";
    "application/font-woff2"             "public, max-age=31536000, immutable";
    
    # Media files - moderate cache
    "video/mp4"                          "public, max-age=604800";
    "video/webm"                         "public, max-age=604800";
    "audio/mpeg"                         "public, max-age=604800";
    "audio/mp4"                          "public, max-age=604800";
    "audio/flac"                         "public, max-age=604800";
    "audio/ogg"                          "public, max-age=604800";
    
    # Documents
    "application/pdf"                    "public, max-age=86400";
    
    # Default - short cache
    default                              "public, max-age=300";
}

# Expires header based on file extension
map $uri $expires_time {
    # Dashboard files - very short cache for updates
    ~^/(index\.html|$)$                  "5m";
    ~^/(services\.json|dashboard\.json|config/)$ "1m";
    
    # Static assets - long expiration
    ~*\.(css|js)$                        "1y";
    ~*\.(jpg|jpeg|png|gif|webp|svg|ico)$ "1y";
    ~*\.(woff|woff2|ttf|otf|eot)$        "1y";
    
    # Media files - moderate expiration
    ~*\.(mp4|mkv|avi|mov|webm|mp3|flac|aac|ogg)$ "1w";
    
    # Documents
    ~*\.(pdf|doc|docx)$                  "1d";
    
    # Dynamic content - minimal cache
    ~*\.(html|htm|php)$                  "epoch";
    
    # Default
    default                              "5m";
}

# ============================================================================
# SECURITY HEADERS - DYNAMIC BASED ON SERVICE TYPE
# ============================================================================

# X-Frame-Options based on service type
map $http_host $x_frame_options {
    # Media servers need to be embeddable
    ~^(emby|jellyfin|plex|abs|music)\.7gram\.xyz$     "SAMEORIGIN";
    
    # Admin interfaces should be strict
    ~^(auth|pihole|home|sonarr|radarr|lidarr|jackett|qbt)\.7gram\.xyz$ "DENY";
    
    # Default
    default                                  "SAMEORIGIN";
}

# Content Type Options
map $http_host $x_content_type_options {
    default "nosniff";
}

# XSS Protection
map $http_host $x_xss_protection {
    default "1; mode=block";
}

# Referrer Policy - stricter for admin interfaces
map $http_host $referrer_policy {
    # Strict for admin/auth services
    ~^(auth|pihole|home|qbt|sonarr|radarr|lidarr|jackett)\.7gram\.xyz$ "strict-origin";
    
    # Relaxed for media services
    ~^(emby|jellyfin|plex|abs|music|calibreweb)\.7gram\.xyz$ "strict-origin-when-cross-origin";
    
    # Default
    default "strict-origin-when-cross-origin";
}

# Content Security Policy - Service-specific
map $http_host $content_security_policy {
    # Media servers - need relaxed policies
    ~^(emby|jellyfin|plex)\.7gram\.xyz$ "default-src 'self' 'unsafe-inline' 'unsafe-eval' data: blob: wss:; img-src 'self' data: https: blob:; connect-src 'self' wss: https:;";
    
    # Audiobook and book services
    ~^(abs|calibreweb|music)\.7gram\.xyz$ "default-src 'self' 'unsafe-inline' 'unsafe-eval' data: blob:; img-src 'self' data: https: blob:; connect-src 'self' wss: https:;";
    
    # AI services - need WebSocket and API access
    ~^(ai|chat|ollama|sd|comfy|whisper|code)\.7gram\.xyz$ "default-src 'self' 'unsafe-inline' 'unsafe-eval'; img-src 'self' data: https:; connect-src 'self' wss: https:;";
    
    # Admin interfaces - strict policies
    ~^(auth|pihole)\.7gram\.xyz$ "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; connect-src 'self';";
    
    # *arr services - moderate restrictions
    ~^(sonarr|radarr|lidarr|jackett|audiobooks|ebooks)\.7gram\.xyz$ "default-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; img-src 'self' data: https:; connect-src 'self' https:;";
    
    # Household services
    ~^(mealie|grocy)\.7gram\.xyz$ "default-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; img-src 'self' data: https:; connect-src 'self' https:;";
    
    # Default policy
    default "default-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self' https:;";
}

# ============================================================================
# RATE LIMITING AND ACCESS CONTROL
# ============================================================================

# Rate limiting zones based on service type
map $http_host$request_uri $rate_limit_zone {
    # Dashboard - relaxed rate limiting
    ~^7gram\.xyz/.*$ "dashboard";
    
    # Media streaming - relaxed rate limiting
    ~^(emby|jellyfin|plex|abs|music|calibreweb)\.7gram\.xyz/.*$ "media";
    
    # AI services - moderate rate limiting
    ~^(ai|chat|ollama|sd|comfy|whisper|code)\.7gram\.xyz/.*$ "ai";
    
    # Admin interfaces - moderate rate limiting
    ~^(sonarr|radarr|lidarr|jackett|qbt|audiobooks|ebooks|filebot)\.7gram\.xyz/.*$ "admin";
    
    # System services - moderate rate limiting
    ~^(home|pihole|grafana|uptime|duplicati|portainer|auth)\.7gram\.xyz/.*$ "system";
    
    # Household services - relaxed rate limiting
    ~^(mealie|grocy)\.7gram\.xyz/.*$ "general";
    
    # Default
    default "general";
}

# Rate limit burst values
map $rate_limit_zone $rate_limit_burst {
    "dashboard" 50;
    "media"     30;
    "ai"        20;
    "admin"     15;
    "system"    15;
    "general"   25;
    default     20;
}

# ============================================================================
# CONTENT TYPE AND MEDIA HANDLING
# ============================================================================

# Media file detection
map $uri $is_media_file {
    # Video files
    ~*\.(mp4|mkv|avi|mov|wmv|flv|webm|m4v|3gp|ogv)$  "video";
    # Audio files  
    ~*\.(mp3|flac|aac|ogg|wma|wav|m4a|opus)$          "audio";
    # Images
    ~*\.(jpg|jpeg|png|gif|webp|svg|bmp|tiff)$         "image";
    # Documents
    ~*\.(pdf|doc|docx|txt|epub|mobi)$                 "document";
    # Default
    default "other";
}

# ============================================================================
# LOGGING AND MONITORING
# ============================================================================

# Determine if request should be logged (reduce noise)
map $request_uri $should_log {
    # Don't log static assets to reduce log volume
    ~*\.(css|js|png|jpg|gif|ico|woff|woff2)$ 0;
    # Don't log frequent polling
    ~^/api/status$ 0;
    # Log everything else
    default 1;
}

# User agent classification
map $http_user_agent $client_type {
    # Browsers
    ~*chrome     "browser";
    ~*firefox    "browser";
    ~*safari     "browser";
    ~*edge       "browser";
    
    # Mobile
    ~*mobile     "mobile";
    ~*android    "mobile";
    ~*iphone     "mobile";
    
    # Media clients
    ~*plex       "media_client";
    ~*emby       "media_client";
    ~*jellyfin   "media_client";
    ~*kodi       "media_client";
    
    # API clients
    ~*curl       "api_client";
    ~*wget       "api_client";
    ~*postman    "api_client";
    
    # Bots
    ~*bot        "bot";
    ~*crawler    "bot";
    ~*spider     "bot";
    
    # Default
    default      "other";
}

# Service type mapping for enhanced features
map $http_host $service_type {
    # Dashboard
    ~^7gram\.xyz$                                                     "dashboard";
    
    # Media services
    ~^(emby|jellyfin|plex|abs|music|calibreweb|youtube)\.7gram\.xyz$ "media";
    
    # AI services
    ~^(ai|chat|ollama|sd|comfy|whisper|code)\.7gram\.xyz$            "ai";
    
    # Admin services
    ~^(sonarr|radarr|lidarr|jackett|qbt|audiobooks|ebooks|filebot)\.7gram\.xyz$ "admin";
    
    # System services
    ~^(home|pihole|grafana|uptime|duplicati|portainer|auth)\.7gram\.xyz$ "system";
    
    # Household services
    ~^(mealie|grocy)\.7gram\.xyz$                                    "household";
    
    # Default
    default "general";
}

# Service name extraction for logging
map $http_host $service_name {
    ~^([^.]+)\.7gram\.xyz$ $1;
    ~^7gram\.xyz$          "dashboard";
    default                "unknown";
}

# ============================================================================
# SIMPLIFIED REQUEST TIMEOUTS
# ============================================================================

# Basic timeout mapping
map $service_type $req_timeout {
    "dashboard" "10s";
    "media"     "60s";
    "ai"        "120s";
    "admin"     "30s";
    "system"    "30s";
    default     "30s";
}